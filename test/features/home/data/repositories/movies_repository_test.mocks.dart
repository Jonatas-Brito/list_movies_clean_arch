// Mocks generated by Mockito 5.0.15 from annotations
// in movies_list/test/features/home/data/repositories/movies_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_list/core/network/network_info.dart' as _i2;
import 'package:movies_list/features/home/data/datasources/movies_remote_data_source.dart'
    as _i4;
import 'package:movies_list/features/home/domain/entities/movie.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MoviesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRemoteDataSource extends _i1.Mock
    implements _i4.MoviesRemoteDataSource {
  MockMoviesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.Movie>> getMoviesPopular(String? key) =>
      (super.noSuchMethod(Invocation.method(#getMoviesPopular, [key]),
              returnValue: Future<List<_i5.Movie>>.value(<_i5.Movie>[]))
          as _i3.Future<List<_i5.Movie>>);
  @override
  _i3.Future<List<_i5.Movie>> getMoviesInTheaters(String? key) =>
      (super.noSuchMethod(Invocation.method(#getMoviesInTheaters, [key]),
              returnValue: Future<List<_i5.Movie>>.value(<_i5.Movie>[]))
          as _i3.Future<List<_i5.Movie>>);
  @override
  String toString() => super.toString();
}
