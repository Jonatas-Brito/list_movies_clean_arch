// Mocks generated by Mockito 5.0.15 from annotations
// in movies_list/test/features/overview/domain/usecases/add_movie_to_favorites_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_list/core/error/failure.dart' as _i6;
import 'package:movies_list/features/description/domain/repositories/movies_favorite_repository.dart'
    as _i4;
import 'package:movies_list/features/home/domain/entities/movie.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovie_1 extends _i1.Fake implements _i3.Movie {}

/// A class which mocks [MoviesFavoriteReposiry].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesFavoriteReposiry extends _i1.Mock
    implements _i4.MoviesFavoriteReposiry {
  MockMoviesFavoriteReposiry() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.Movie>> getListMoviesFavorite() =>
      (super.noSuchMethod(Invocation.method(#getListMoviesFavorite, []),
              returnValue: Future<List<_i3.Movie>>.value(<_i3.Movie>[]))
          as _i5.Future<List<_i3.Movie>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, void>> addMovieToCachedFavorite(
          _i3.Movie? movie) =>
      (super.noSuchMethod(Invocation.method(#addMovieToCachedFavorite, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, void>>.value(
                  _FakeEither_0<_i6.Failure, void>()))
          as _i5.Future<_i2.Either<_i6.Failure, void>>);
  @override
  _i5.Future<_i3.Movie> retriveMovieFavorite(_i3.Movie? movie) =>
      (super.noSuchMethod(Invocation.method(#retriveMovieFavorite, [movie]),
              returnValue: Future<_i3.Movie>.value(_FakeMovie_1()))
          as _i5.Future<_i3.Movie>);
  @override
  String toString() => super.toString();
}
